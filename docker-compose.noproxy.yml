version: "3.9"

networks:
  signaling-internet:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 10.40.100.0/24
        - subnet: fd40:100::/64
  signaling-backend:
    driver: bridge
    enable_ipv6: true
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 10.40.101.0/24
        - subnet: fd40:101::/64

services:
  ### Middleware ###
  signaling:
    build: signaling/build
    read_only: true
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - janus
      - nats
      - coturn
    environment:
      - TZ=${TZ}
      - TURN_API_KEY=${TURN_API_KEY}
      - HASH_KEY=${HASH_KEY}
      - BLOCK_KEY=${BLOCK_KEY}
      - JANUS_API_KEY=${JANUS_API_KEY}
    volumes:
      - ./signaling/server.conf:/etc/signaling/server.conf.template:ro,Z
      - ./signaling/nextcloud.conf:/etc/signaling/nextcloud.conf.template:ro,Z
    tmpfs:
      - /config:uid=1500,gid=0
    cap_drop:
     - ALL
    networks:
      signaling-backend:
        aliases:
          - signaling-int
      signaling-internet:
        aliases:
          - signaling-ext

  ### Backend ###
  janus:
    build: janus/build
    read_only: true
    restart: always
    depends_on:
      - coturn
    environment:
      - TZ=${TZ}
      - SIGNALING_HOSTNAME=${SIGNALING_HOSTNAME}
      - TURN_API_KEY=${TURN_API_KEY}
      - JANUS_API_KEY=${JANUS_API_KEY}
    volumes:
      - ./janus/janus.jcfg:/usr/local/etc/janus/janus.jcfg.template:ro,Z
      - ./janus/janus.transport.http.jcfg:/usr/local/etc/janus/janus.transport.http.jcfg:ro,Z
      - ./janus/janus.transport.websockets.jcfg:/usr/local/etc/janus/janus.transport.websockets.jcfg:ro,Z
      - ./janus/janus.transport.nanomsg.jcfg:/usr/local/etc/janus/janus.transport.nanomsg.jcfg:ro,Z
    tmpfs:
      - /janustmp/:uid=1500,gid=0
    cap_drop:
     - ALL
    networks:
      signaling-backend:
        aliases:
          - janus-int

  coturn:
    build: coturn/build
    read_only: true
    restart: always
    environment:
      - TZ=${TZ}
      - SIGNALING_HOSTNAME=${SIGNALING_HOSTNAME}
      - TURN_API_KEY=${TURN_API_KEY}
    volumes:
      - ./coturn/turnserver.conf:/etc/turnserver.conf.template:ro,Z
    tmpfs:
      - /turntmp:uid=100,gid=0
      - /var/lib/coturn/:uid=100,gid=0
      - /run:uid=100,gid=0
    cap_drop:
      - ALL
    networks:
      signaling-backend:
        aliases:
          - coturn-int
      
  nats:
    #image: nats:alpine
    build: nats/build
    read_only: true
    command: ["-c", "/config/gnatsd.conf"]
    restart: always
    environment:
      - TZ=${TZ}
    volumes:
      - ./nats/gnatsd.conf:/config/gnatsd.conf:ro,Z
    cap_drop:
      - ALL
    networks:
      signaling-backend:
        aliases:
          - nats-int

  ipv6nat:
    image: robbertkl/ipv6nat
    depends_on:
      - coturn
      - janus
      - nats
      - signaling
    restart: always
    environment:
      - TZ=${TZ}
    security_opt:
      - label=disable
    privileged: true
    network_mode: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /lib/modules:/lib/modules:ro

